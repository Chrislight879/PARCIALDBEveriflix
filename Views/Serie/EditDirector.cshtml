@model PARCIALDBEveriflix.Models.Serie
@{
    ViewBag.Title = "Editar Serie (Director)";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // URLs para evitar problemas con @ en Razor
    var popperUrl = "https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js";
    var bootstrapJsUrl = "https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js";
}

<head>
    <link rel="stylesheet" href="~/Content/MoviesStyle.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<div class="movie-management-container">
    <h2>@ViewBag.Title</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            <i class="fas fa-exclamation-circle"></i> <strong>Error!</strong> @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            <i class="fas fa-check-circle"></i> <strong>Éxito!</strong> @TempData["SuccessMessage"]
        </div>
    }

    <div class="card">
        <div class="card-header">
            <h4><i class="fas fa-edit"></i> Editar Serie</h4>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("EditDirector", "Serie", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id_Serie)
                @Html.HiddenFor(model => model.Id_Director)
                @Html.HiddenFor(model => model.Id_TipoContenido)
                @Html.HiddenFor(model => model.ImgURL)

                <div class="form-grid">
                    <!-- Columna izquierda - Campos del formulario -->
                    <div class="form-column">
                        <!-- Nombre -->
                        <div class="form-group mb-4">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <!-- Categoría -->
                        <div class="form-group mb-4">
                            @Html.LabelFor(model => model.Id_Categoria, "Categoría", htmlAttributes: new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.Id_Categoria,
                                (IEnumerable<SelectListItem>)ViewBag.Id_Categoria,
                                "Seleccione una categoría",
                                new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.Id_Categoria, "", new { @class = "text-danger" })
                        </div>

                        <!-- Clasificación -->
                        <div class="form-group mb-4">
                            @Html.LabelFor(model => model.Id_Clasificacion, "Clasificación", htmlAttributes: new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.Id_Clasificacion,
                                (IEnumerable<SelectListItem>)ViewBag.Id_Clasificacion,
                                "Seleccione una clasificación",
                                new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.Id_Clasificacion, "", new { @class = "text-danger" })
                        </div>

                        <!-- Productor -->
                        <div class="form-group mb-4">
                            @Html.LabelFor(model => model.Id_Productor, "Productor", htmlAttributes: new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.Id_Productor,
                                (IEnumerable<SelectListItem>)ViewBag.Id_Productor,
                                "Seleccione un productor (opcional)",
                                new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.Id_Productor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Columna derecha - Imagen -->
                    <div class="image-column">
                        <label class="form-label">Imagen de Portada</label>
                        <div class="image-upload" id="imageUpload">
                            @if (!string.IsNullOrEmpty(Model.ImgURL))
                            {
                                <img src="@Model.ImgURL" class="image-preview" id="imagePreview">
                            }
                            else
                            {
                                <i class="fas fa-camera"></i>
                                <span>Haz clic para cambiar la imagen</span>
                                <img src="/Content/Images/SeriesCovers/default.jpg" class="image-preview" id="imagePreview" style="display: none;">
                            }
                            <input type="file" name="imagen" id="imagen" accept="image/*" style="display: none;">
                        </div>
                        <small class="form-text text-muted">Formatos aceptados: JPG, PNG, GIF. Tamaño máximo: 2MB</small>
                    </div>
                </div>

                <div class="form-actions mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Guardar Cambios
                    </button>
                    @Html.ActionLink("Cancelar", "ManageSeriesDirector", null, new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Popper.js -->
    <script src="@popperUrl"></script>

    <!-- Bootstrap 5 JS -->
    <script src="@bootstrapJsUrl"></script>

    <script>
        // Validación de formulario
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Manejo de la imagen
        document.getElementById('imageUpload').addEventListener('click', function () {
            document.getElementById('imagen').click();
        });

        document.getElementById('imagen').addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    const preview = document.getElementById('imagePreview');
                    preview.src = event.target.result;
                    preview.style.display = 'block';

                    // Ocultar icono y texto si existen
                    const icon = document.querySelector('#imageUpload i');
                    const text = document.querySelector('#imageUpload span');
                    if (icon) icon.style.display = 'none';
                    if (text) text.style.display = 'none';
                }
                reader.readAsDataURL(file);
            }
        });

        // Cerrar automáticamente las alertas después de 5 segundos
        setTimeout(function () {
            $('.alert').alert('close');
        }, 5000);
    </script>
}

<style>
    .movie-management-container {
        width: 95%;
        max-width: 1000px;
        margin: 30px auto;
        padding: 30px;
        background-color: #1e1e1e;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        color: #e0e0e0;
        animation: fadeIn 0.6s ease-out forwards;
    }

        .movie-management-container h2 {
            font-size: 2.2em;
            text-align: center;
            margin-bottom: 25px;
            color: #ff5252;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            padding-bottom: 15px;
        }

            .movie-management-container h2::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 150px;
                height: 3px;
                background: linear-gradient(90deg, transparent, #b71c1c, transparent);
            }

    .card {
        background-color: #252525 !important;
        border-radius: 10px;
        border: none;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
    }

    .card-header {
        background: linear-gradient(135deg, #b71c1c, #8c1616) !important;
        color: white !important;
        padding: 15px 20px;
        border-radius: 10px 10px 0 0 !important;
        border: none;
    }

    .form-control, .form-select {
        background-color: #333 !important;
        color: white !important;
        border: 1px solid #444 !important;
        padding: 10px 15px;
    }

        .form-control:focus, .form-select:focus {
            background-color: #444 !important;
            color: white !important;
            border-color: #b71c1c !important;
            box-shadow: 0 0 0 0.25rem rgba(183, 28, 28, 0.25);
        }

    .form-label {
        color: #e0e0e0;
        margin-bottom: 8px;
        font-weight: 500;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 25px;
    }

    .image-column {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .image-upload {
        width: 100%;
        max-width: 300px;
        height: 300px;
        border: 2px dashed #444;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        margin-bottom: 15px;
        background-color: #252525;
        transition: all 0.3s;
    }

        .image-upload:hover {
            border-color: #b71c1c;
        }

    .image-preview {
        max-width: 100%;
        max-height: 250px;
        border-radius: 6px;
        object-fit: cover;
    }

    .btn-primary {
        background: linear-gradient(to right, #b71c1c, #d32f2f);
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-primary:hover {
            background: linear-gradient(to right, #d32f2f, #b71c1c);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(183, 28, 28, 0.4);
        }

    .btn-secondary {
        background: #444;
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-secondary:hover {
            background: #555;
            transform: translateY(-2px);
        }

    .alert {
        border-radius: 8px;
        margin-bottom: 25px;
        border: none;
        padding: 15px 20px;
        font-weight: 500;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .alert-danger {
        background: linear-gradient(to right, #8c1616, #b71c1c);
        color: white;
    }

    .alert-success {
        background: linear-gradient(to right, #388e3c, #4caf50);
        color: white;
    }

    .text-danger {
        color: #ff5252 !important;
    }

    @@media (max-width: 768px) {
        .form-grid {
            grid-template-columns: 1fr;
        }

        .image-column {
            margin-top: 30px;
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>